[{"/Users/sahinzaybak/Desktop/butik-marketi-panel/src/index.js":"1","/Users/sahinzaybak/Desktop/butik-marketi-panel/src/layout/header.jsx":"2","/Users/sahinzaybak/Desktop/butik-marketi-panel/src/App.js":"3","/Users/sahinzaybak/Desktop/butik-marketi-panel/src/reportWebVitals.js":"4","/Users/sahinzaybak/Desktop/butik-marketi-panel/src/store/reducers/rootReducer.js":"5","/Users/sahinzaybak/Desktop/butik-marketi-panel/src/pages/login.jsx":"6","/Users/sahinzaybak/Desktop/butik-marketi-panel/src/store/reducers/auth.js":"7","/Users/sahinzaybak/Desktop/butik-marketi-panel/src/store/actions/auth.js":"8","/Users/sahinzaybak/Desktop/butik-marketi-panel/src/store/actions/add-product.js":"9","/Users/sahinzaybak/Desktop/butik-marketi-panel/src/store/reducers/add-product.js":"10","/Users/sahinzaybak/Desktop/butik-marketi-panel/src/helpers/helpers.js":"11","/Users/sahinzaybak/Desktop/butik-marketi-panel/src/store/actions/butik.js":"12","/Users/sahinzaybak/Desktop/butik-marketi-panel/src/store/reducers/butik.js":"13","/Users/sahinzaybak/Desktop/butik-marketi-panel/src/components/product-operations.jsx":"14","/Users/sahinzaybak/Desktop/butik-marketi-panel/src/pages/product-operations.jsx":"15","/Users/sahinzaybak/Desktop/butik-marketi-panel/src/components/product-operations/product-area.jsx":"16","/Users/sahinzaybak/Desktop/butik-marketi-panel/src/components/product-operations/product-add/modals/modal-add.jsx":"17","/Users/sahinzaybak/Desktop/butik-marketi-panel/src/components/product-operations/product-update/form-update.jsx":"18","/Users/sahinzaybak/Desktop/butik-marketi-panel/src/components/product-operations/product-add/modals/collapse/panel-category.jsx":"19","/Users/sahinzaybak/Desktop/butik-marketi-panel/src/components/product-operations/product-add/modals/collapse/panel-form.jsx":"20","/Users/sahinzaybak/Desktop/butik-marketi-panel/src/components/content-loader/product-list-loader.jsx":"21","/Users/sahinzaybak/Desktop/butik-marketi-panel/src/components/product-operations/product-analysis/modal-analysis.jsx":"22","/Users/sahinzaybak/Desktop/butik-marketi-panel/src/components/product-operations/product-analysis/analysis.jsx":"23","/Users/sahinzaybak/Desktop/butik-marketi-panel/src/components/product-operations/product-update/modal-update.jsx":"24","/Users/sahinzaybak/Desktop/butik-marketi-panel/src/pages/analysis.jsx":"25","/Users/sahinzaybak/Desktop/butik-marketi-panel/src/components/analysis.jsx":"26"},{"size":931,"mtime":1637275120695,"results":"27","hashOfConfig":"28"},{"size":2761,"mtime":1637803148111,"results":"29","hashOfConfig":"28"},{"size":942,"mtime":1637796601312,"results":"30","hashOfConfig":"28"},{"size":362,"mtime":1612046749000,"results":"31","hashOfConfig":"28"},{"size":197,"mtime":1637281832926,"results":"32","hashOfConfig":"28"},{"size":2694,"mtime":1637803065847,"results":"33","hashOfConfig":"28"},{"size":252,"mtime":1637281606963,"results":"34","hashOfConfig":"28"},{"size":532,"mtime":1637273939181,"results":"35","hashOfConfig":"28"},{"size":3329,"mtime":1637619724235,"results":"36","hashOfConfig":"28"},{"size":1247,"mtime":1637592187750,"results":"37","hashOfConfig":"28"},{"size":246,"mtime":1637273078087,"results":"38","hashOfConfig":"28"},{"size":440,"mtime":1637357613744,"results":"39","hashOfConfig":"28"},{"size":427,"mtime":1637281910050,"results":"40","hashOfConfig":"28"},{"size":2485,"mtime":1637782341537,"results":"41","hashOfConfig":"28"},{"size":409,"mtime":1637435266213,"results":"42","hashOfConfig":"28"},{"size":1812,"mtime":1637711417398,"results":"43","hashOfConfig":"28"},{"size":2975,"mtime":1637538543054,"results":"44","hashOfConfig":"28"},{"size":11290,"mtime":1637625411357,"results":"45","hashOfConfig":"28"},{"size":3748,"mtime":1637592178639,"results":"46","hashOfConfig":"28"},{"size":9916,"mtime":1637625212675,"results":"47","hashOfConfig":"28"},{"size":587,"mtime":1637541353012,"results":"48","hashOfConfig":"28"},{"size":740,"mtime":1637711502630,"results":"49","hashOfConfig":"28"},{"size":2040,"mtime":1637800468613,"results":"50","hashOfConfig":"28"},{"size":1176,"mtime":1637782297156,"results":"51","hashOfConfig":"28"},{"size":422,"mtime":1637796982231,"results":"52","hashOfConfig":"28"},{"size":2838,"mtime":1637803635418,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"lhvokf",{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"56"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sahinzaybak/Desktop/butik-marketi-panel/src/index.js",[],["121","122"],"/Users/sahinzaybak/Desktop/butik-marketi-panel/src/layout/header.jsx",["123","124","125","126"],"/Users/sahinzaybak/Desktop/butik-marketi-panel/src/App.js",["127","128"],"import {Route} from 'react-router-dom';\nimport { useHistory } from \"react-router\";\nimport loginPage from './pages/login.jsx'\nimport productOperations from './pages/product-operations'\nimport analysis from './pages/analysis'\nimport Header from './layout/header.jsx'\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport './assets/global.scss'\nimport 'antd/dist/antd.css'; \n\nlet loginUserInfo\nfunction App() {\n  // const history = useHistory();\n  // loginUserInfo = JSON.parse(localStorage.getItem(\"butik_token\"))\n  return (\n    <div className=\"App\">\n      {/* {loginUserInfo == null && history.push(\"/\")} */}\n      <Route exact path='/' component={loginPage}></Route>\n      <Route path=\"/\" render={(props) => (props.location.pathname !== \"/\") && <Header /> }></Route> \n      <Route path='/product-operations' component={productOperations}></Route>\n      <Route path='/analysis' component={analysis}></Route>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/sahinzaybak/Desktop/butik-marketi-panel/src/reportWebVitals.js",[],"/Users/sahinzaybak/Desktop/butik-marketi-panel/src/store/reducers/rootReducer.js",[],"/Users/sahinzaybak/Desktop/butik-marketi-panel/src/pages/login.jsx",["129","130","131"],"/Users/sahinzaybak/Desktop/butik-marketi-panel/src/store/reducers/auth.js",["132"],"const initialState = {\n\tauthInfo:[]\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case \"AUTH_INFO\":\n      return{\n        ...state,\n        authInfo: action.payload,\n      }\n    default:\n\t\t\n      return state;\n  }\n}","/Users/sahinzaybak/Desktop/butik-marketi-panel/src/store/actions/auth.js",["133"],"import axios from \"axios\";\n\nexport const login = (form_values) => (dispatch) => {\n    axios.post(\"http://localhost:3001/butik/login\", {\n        username: form_values.user_name,\n        password: form_values.password,\n      }).then((response) =>\n        dispatch({\n          type: \"AUTH_INFO\",\n          payload: response.data,\n        })\n      ).catch((error) => {\n        if(error.response.status == 401){\n          dispatch({\n            type: \"AUTH_INFO\",\n            payload:error.response.data\n          })\n        }\n    })\n};\n","/Users/sahinzaybak/Desktop/butik-marketi-panel/src/store/actions/add-product.js",["134","135"],"import axios from \"axios\";\n\nexport const fetchMainCategory = () => {\n  return async (dispatch) => {\n    await axios\n      .get(\"http://localhost:3001/categories/filter/choose\")\n      .then((value) => {\n        dispatch({\n          type: \"FETCH_MAIN_CATEGORY_LIST\",\n          payload: value.data,\n        });\n      });\n  };\n};\n\nexport const fetchSubCategory = (mainCategoryTitle) => {\n  return async (dispatch) => {\n    await axios\n      .get(\n        `http://localhost:3001/categories/filter/choose/${mainCategoryTitle}`\n      )\n      .then((value) => {\n        dispatch({\n          type: \"FETCH_SUB_CATEGORY_LIST\",\n          payload: value.data,\n        });\n      });\n  };\n};\n\nexport const fetchCategoryTitleList = (mainCategoryTitle, subCategoryTitle) => {\n  return async (dispatch) => {\n    await axios\n      .get(\n        `http://localhost:3001/categories/filter/choose/${mainCategoryTitle}/${subCategoryTitle}`\n      )\n      .then((value) => {\n        dispatch({\n          type: \"FETCH_CATEGORY_TITLE_LIST\",\n          payload: value.data,\n        });\n      });\n  };\n};\n\nexport const fetchFilterOptions = (categoryTitle) => {\n  return async (dispatch) => {\n    await axios\n      .get(`http://localhost:3001/filter/${categoryTitle}`)\n      .then((value) => {\n        dispatch({\n          type: \"FETCH_OPTIONS_LIST\",\n          payload: value.data.filter[0],\n        });\n      });\n  };\n};\n\nexport const fetchAddProduct = (selectedValues) => {\n  return async (dispatch) => {\n    await axios\n      .post(\n        \"http://localhost:3001/product\",\n        {\n          title: selectedValues.title,\n          description: selectedValues.desc,\n          price: selectedValues.price,\n          link: selectedValues.link,\n          image: selectedValues.image,\n          category: selectedValues.category,\n          filter_title: selectedValues.filterTitle,\n          gender: selectedValues.gender,\n          size: selectedValues.size,\n          images: selectedValues.images,\n          comments: [],\n          colors: selectedValues.colors,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"butik_token\")}`,\n          },\n        }\n      )\n      .then((value) => {\n        if (value.status == 200) {\n          dispatch({\n            type: \"ADDED-PRODUCT\",\n            payload: value,\n          });\n        }\n      });\n  };\n};\n\nexport const fetchUpdateProduct = (selectedValues, productId) => {\n  return async (dispatch) => {\n    await axios\n      .put(\n        `http://localhost:3001/product/update/${productId}`,\n        {\n          title: selectedValues.title,\n          description: selectedValues.desc,\n          price: selectedValues.price,\n          link: selectedValues.link,\n          image: selectedValues.image,\n          category: selectedValues.category,\n          gender: selectedValues.gender,\n          size: selectedValues.size,\n          images: selectedValues.images,\n          comments: [],\n          colors: selectedValues.colors,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"butik_token\")}`,\n          },\n        }\n      )\n      .then((value) => {\n        if (value.status == 200) {\n          dispatch({\n            type: \"ADDED-PRODUCT\",\n            payload: value,\n          });\n        }\n      });\n  };\n};\n","/Users/sahinzaybak/Desktop/butik-marketi-panel/src/store/reducers/add-product.js",["136"],"const initialState = {\n  mainCategoryList: [],\n  subCategoryList: [],\n  categoryTitleList: [],\n  optionsList: [],\n  selectedCategorySlug: \"\",\n  selectedCategoryFilterTitle:\"\",\n  addedProduct: [],\n  openProductAddFormTab: false,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case \"FETCH_MAIN_CATEGORY_LIST\":\n      return {\n        ...state,\n        mainCategoryList: action.payload,\n      };\n    case \"FETCH_SUB_CATEGORY_LIST\":\n      return {\n        ...state,\n        subCategoryList: action.payload,\n      };\n    case \"FETCH_CATEGORY_TITLE_LIST\":\n      return {\n        ...state,\n        categoryTitleList: action.payload,\n      };\n    case \"FETCH_OPTIONS_LIST\":\n      return {\n        ...state,\n        optionsList: action.payload,\n      };\n    case \"SELECTED_CATEGORY_INFO\":\n      return {\n        ...state,\n        selectedCategorySlug: action.payload.slug,\n        selectedCategoryFilterTitle: action.payload.filterTitle\n      };\n    case \"ADDED-PRODUCT\":\n      return {\n        ...state,\n        addedProduct: action.payload,\n      };\n    case \"OPEN_ADD_PRODUCT_FORM_TAB\":\n      return {\n        ...state,\n        openProductAddFormTab: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n","/Users/sahinzaybak/Desktop/butik-marketi-panel/src/helpers/helpers.js",["137"],"import { useSelector } from \"react-redux\";\n\nexport const IsAddedProduct = () => {\n  //Ürün eklendiyse eğer..\n  let addedProductInfo = useSelector((state) => state.addProduct.addedProduct);\n  if (addedProductInfo.status == 200) return true;\n};\n","/Users/sahinzaybak/Desktop/butik-marketi-panel/src/store/actions/butik.js",[],"/Users/sahinzaybak/Desktop/butik-marketi-panel/src/store/reducers/butik.js",["138"],"const initialState = {\n  butikProducts: [],\n  butikInfo: [],\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case \"FETCH_BUTIK_PRODUCTS\":\n      return {\n        ...state,\n        butikProducts: action.payload,\n      };\n\n    case \"BUTIK_INFO\":\n      return {\n        ...state,\n        butikInfo: JSON.parse(localStorage.getItem(\"butik_info\"))\n      };\n    default:\n      return state;\n  }\n};\n","/Users/sahinzaybak/Desktop/butik-marketi-panel/src/components/product-operations.jsx",[],"/Users/sahinzaybak/Desktop/butik-marketi-panel/src/pages/product-operations.jsx",[],"/Users/sahinzaybak/Desktop/butik-marketi-panel/src/components/product-operations/product-area.jsx",["139","140"],"import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { PlusOutlined } from '@ant-design/icons';\nimport ProductListContentLoader from '../content-loader/product-list-loader';\n\n//Actions\nimport { fetchButikProducts } from '../../store/actions/butik'\n\nlet butikProducts\nconst ProductArea = ({ onClickOpenModal, onClickOpenModalUpdate, onClickOpenModalAnalysis }) => {\n  const dispatch = useDispatch()\n  butikProducts = useSelector(state => state.butik.butikProducts)\n  useEffect(() => {\n    dispatch(fetchButikProducts())\n  }, []);\n\n  return (\n    <div className=\"add-product\">\n      <div className=\"d-flex flex-wrap flex-column\">\n        <div className=\"add-product__box d-flex\" onClick={() => onClickOpenModal()}>\n          <PlusOutlined className=\"add-product__plus-icon\" />\n          <h6 className=\"ml-2\">Ürün Ekle</h6>\n        </div>\n\n        <div className=\"product\">\n          {butikProducts == \"\" ? <ProductListContentLoader />\n            :\n            <>\n              {butikProducts.products.map((product, index) => (\n                <div className=\"product-item\" key={index}>\n                  <div className=\"product-item__info\" onClick={() => onClickOpenModalUpdate(product)}>\n                    <div className=\"product-image mb-2\">\n                      <img src={product.image} alt=\"\" />\n                    </div>\n                    <h4 className=\"product-item__title\">{product.title}</h4>\n                    <p className=\"product-item__price\">{product.price} ₺</p>\n                  </div>\n                  <p onClick={() => onClickOpenModalAnalysis(product.image,product.title)}>Analiz Et</p>\n                </div>\n              ))}\n            </>\n          }\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductArea;\n","/Users/sahinzaybak/Desktop/butik-marketi-panel/src/components/product-operations/product-add/modals/modal-add.jsx",["141"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Modal, Collapse } from \"antd\";\nimport { IsAddedProduct } from '../../../../helpers/helpers'\n//Actions\nimport { fetchMainCategory } from \"../../../../store/actions/add-product\";\n\n//Components\nimport PanelCategory from './collapse/panel-category'\nimport PanelForm from './collapse/panel-form'\n\nconst ModalAdd = ({ preview, onCancel, destroyForm }) => {\n  const dispatch = useDispatch();\n  const { Panel } = Collapse;\n  const [activeCollapseKey, setActiveCollapseKey] = useState(['1']);\n  const [isActiveFormTab, setIsActiveFormTab] = useState(\"disabled\");\n\n  let mainCategoryList = useSelector((state) => state.addProduct.mainCategoryList); //Ana Kategori Listesi (Kadın, Erkek, Çocuk&Bebek, Ev&Yaşam ..vs)\n  let subCategoryList = useSelector((state) => state.addProduct.subCategoryList); // Alt Kategori Listesi (Giyim, Ayakkabı, Çanta&Aksesuar ..vs)\n  let categoryTitleList = useSelector((state) => state.addProduct.categoryTitleList); //Kategori Listesi (T-shirt, Pantolon, Şort ..vs)\n  let optionsList = useSelector((state) => state.addProduct.optionsList); // Filter Listesi (Cinsiyet, Beden, Renk ..vs)\n  let openProductAddFormTab = useSelector((state) => state.addProduct.openProductAddFormTab); // Filtre checkbox seçildi mi?\n\n  useEffect(() => {\n    dispatch(fetchMainCategory()); //Modal açıldığında Ana kategorileri getir.\n  }, []);\n\n  useEffect(() => {\n    if (openProductAddFormTab) {\n      setIsActiveFormTab(\"enable\") //form tab'ının disabled kaldır, enabled yap.\n      setActiveCollapseKey(2) //form tab'ını aç.\n    }\n    else {\n      setActiveCollapseKey(1)\n      setIsActiveFormTab(\"disabled\") //form tab'ının disabled yap.\n    }\n  }, [openProductAddFormTab]);\n\n  let isAddedProduct = IsAddedProduct() //yeni ürün eklendiğinde\n  useEffect(() => {\n    if (isAddedProduct) {\n      setActiveCollapseKey(1)\n      setIsActiveFormTab(\"disabled\") //form tab'ının disabled yap.\n    }\n  }, [isAddedProduct]);\n\n  return (\n    <Modal\n      visible={preview}\n      footer={null}\n      destroyOnClose={destroyForm}\n      width={780}\n      centered\n      onCancel={() => { onCancel() }}>\n      <div className=\"add-product__modal\">\n        <h4 className=\"add-product__modal-title\">Ürün Ekle</h4>\n        <Collapse accordion activeKey={activeCollapseKey} onChange={(key) => setActiveCollapseKey(key)}>\n          <Panel header=\"Ürününüz için bir kategori belirleyin\" key=\"1\">\n            <PanelCategory\n              mainCategoryList={mainCategoryList}\n              subCategoryList={subCategoryList}\n              categoryTitleList={categoryTitleList} />\n          </Panel>\n          <Panel header=\"Ürününüzün bilgilerini giriniz\" key=\"2\" collapsible={isActiveFormTab}>\n            <PanelForm optionsList={optionsList} />\n          </Panel>\n        </Collapse>\n      </div>\n    </Modal>\n  );\n};\n\nexport default ModalAdd;\n","/Users/sahinzaybak/Desktop/butik-marketi-panel/src/components/product-operations/product-update/form-update.jsx",["142","143","144","145","146","147","148","149","150","151","152","153"],"import { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Modal, Radio, Checkbox, Space, Input, Button, Form, Spin } from \"antd\";\nimport { PlusOutlined, ExclamationCircleOutlined, LoadingOutlined } from '@ant-design/icons';\nimport ImageUploading from \"react-images-uploading\";\nimport axios from \"axios\";\nimport { store } from 'react-notifications-component';\nimport { IsAddedProduct } from '../../../helpers/helpers'\n\n//Action\nimport { fetchUpdateProduct } from \"../../../store/actions/add-product\";\n\nconst FormUpdate = ({ optionsList, selectedProductInfo }) => {\n  const dispatch = useDispatch();\n  const [form] = Form.useForm();\n  const { confirm } = Modal;\n  const [images, setImages] = useState([]);\n  const [selectedRadio, setSelectedRadio] = useState(\"\");\n  const [imageSlider, setImageSlider] = useState([]);\n  const [coverImage, setCoverImage] = useState(0);\n  const [isAllUploadImage, setIsAllUploadImage] = useState(true);\n\n  let imageSliderArray = []\n  let selectedCheckboxes = []\n  selectedProductInfo.size.forEach(element => { //checkboxlar seçili gelsin diye.\n    selectedCheckboxes.push(element.size_title)\n  });\n\n  useEffect(() => {\n    form.setFieldsValue({\n      productName: selectedProductInfo.title,\n      price: selectedProductInfo.price,\n      desc: selectedProductInfo.description,\n      link: selectedProductInfo.link\n    });\n  }, [selectedProductInfo]);\n\n  //Resim yükle\n  function onChangeImageUpload(imageList) {\n    setIsAllUploadImage(false)\n    setImages(imageList);\n    const fmData = new FormData();\n    const config = { headers: { \"content-type\": \"multipart/form-data\" } };\n    imageList.forEach((item) => { //Seçilen resimleri aktar\n      fmData.append(\"image\", item.file);\n      try {\n        axios.post(\"https://api.imgbb.com/1/upload?key=8b372dc4d088f787a0516386606606eb\", fmData, config).then(value => {\n          if (value != null) {\n            imageSliderArray.push({ image_slider: value.data.data.display_url })\n            setImageSlider(imageSliderArray)\n            if (imageSliderArray.length == imageList.length) { //resimlerin hepsi yüklendikten sonra..\n              setIsAllUploadImage(true)\n            }\n          }\n        })\n      } catch (err) { console.log(err) }\n    });\n  };\n\n  //Kapak resmi seç\n  function selectCoverImage(index, imagesType) {\n    if (imagesType == \"defaultImages\") setCoverImage(selectedProductInfo.images[index]) //gelen resimlerden seç\n    else setCoverImage(imageSlider[index]) //eklenen resimlerden seç\n  };\n\n  //Beden ve Renk seçimi => seçili checkboxlar\n  function onChangeCheckbox(checkedValues, title) {\n    if (title == \"size\") { // seçili bedenler\n      selectedProductInfo.size = []\n      checkedValues.forEach(element => {\n        selectedProductInfo.size.push({ \"size_title\": element })\n      });\n    }\n    if (title == \"color\") { //seçili renkler\n      selectedProductInfo.colors = [] = []\n      checkedValues.forEach(element => {\n        selectedProductInfo.colors.push({ \"color_title\": element })\n      });\n    }\n  }\n\n  //Formu güncelle\n  function onFinishForm(values) {\n    // default resimlerle + yeni eklenen resimleri birleştir.\n    imageSlider.forEach(element => {\n      selectedProductInfo.images.push(element)\n    });\n    confirm({\n      title: 'Ürününüz güncelleniyor..',\n      icon: <ExclamationCircleOutlined />,\n      centered: true,\n      content: 'Ürün bilgilerinizde değişiklik yapmak istiyor musunuz?',\n      okText: 'Evet',\n      cancelText: 'Hayır',\n      onOk() {\n        return new Promise((resolve, reject) => {\n          setTimeout(Math.random() > 1000 ? resolve : reject, 1000);\n          setTimeout(async () => {\n            await dispatch(fetchUpdateProduct({\n              title: values.productName,\n              desc: values.desc,\n              price: values.price,\n              link: values.link,\n              image: coverImage != \"\" ? coverImage.image_slider : selectedProductInfo.image,\n              category: selectedProductInfo.category,\n              filter_title: selectedProductInfo.filter_title,\n              gender: selectedRadio != \"\" ? selectedRadio : selectedProductInfo.gender,\n              size: selectedProductInfo.size,\n              images: selectedProductInfo.images,\n              comments: [],\n              colors: selectedProductInfo.colors\n            }, selectedProductInfo._id))\n\n            if (IsAddedProduct) { //yeni ürün eklendiğinde (helpers)\n              store.addNotification({\n                message: \"Tebrikler, ürününüz başarıya güncellendi :)\",\n                type: \"success\",\n                insert: \"top\",\n                width: 300,\n                showIcon: true,\n                container: \"top-right\",\n                animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                dismiss: {\n                  duration: 2000,\n                  onScreen: false\n                },\n              })\n            }\n          }, 1000);\n        }).catch(() => false);\n      },\n      onCancel() { },\n    });\n  };\n\n  return (\n    <div className=\"add-product__prop\">\n      <Form onFinish={onFinishForm} autoComplete=\"off\" form={form}>\n        <div className=\"row\">\n          <div className=\"col-md-4 p-0\">\n            <ImageUploading multiple value={images} onChange={onChangeImageUpload} vdataURLKey=\"data_url\">\n              {\n                ({ imageList, onImageUpload }) => (\n                  <>\n                    <div className=\"add-product__prop-wrp\">\n                      <div className=\"add-product__image\" onClick={onImageUpload}>\n                        <div className=\"d-flex align-items-center justify-content-center h-100\">\n                          <PlusOutlined />\n                          <h6 className=\"ml-2\">Ürün Resimleri Ekle</h6>\n                        </div>\n                      </div>\n                      <div className=\"upload__image-wrapper h-100\">\n                        <div className=\"row no-gutters\">\n                          <div className=\"cover mb-2 mt-2\">\n                            {coverImage != \"\" ? <img src={coverImage.image_slider} alt=\"\" /> : <img src={selectedProductInfo.image} alt=\"\" />}\n                          </div>\n\n                          {!isAllUploadImage &&\n                            <div className=\"add-product__loading\">\n                              <Spin indicator={<LoadingOutlined className=\"spin\" style={{ fontSize: 40 }} spin />} />\n                            </div>\n                          }\n\n                          {/* Default Resim listesi */}\n                          {selectedProductInfo.images && selectedProductInfo.images.map((image, index) => (\n                            <div className=\"col-md-3\">\n                              <div key={index} className=\"image-item\" onClick={() => selectCoverImage(index, \"defaultImages\")}>\n                                <img src={image.image_slider} alt=\"\" width=\"100\" />\n                              </div>\n                            </div>\n                          ))}\n\n                          {/* Yüklenen Resim listesi */}\n                          {imageList && imageList.map((image, index) => (\n                            <div className=\"col-md-3\">\n                              <div key={index} className=\"image-item\" onClick={() => selectCoverImage(index, \"newImages\")}>\n                                <img src={image.dataURL} alt=\"\" width=\"100\" />\n                              </div>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n                  </>\n                )\n              }\n            </ImageUploading>\n          </div>\n\n          <div className=\"col-md-8 pl-5\">\n            <div className=\"row\">\n              <div className=\"col-md-8\">\n                <Form.Item name=\"productName\" rules={[{ required: true, message: 'Please input your username!' }]}\n                  shouldUpdate={(prevValues, curValues) => {\n                    return prevValues?.productName !== curValues?.productName;\n                  }}>\n                  <Input placeholder=\"Ürün İsmi\" />\n                </Form.Item>\n              </div>\n              <div className=\"col-md-4\">\n                <Form.Item name=\"price\" rules={[{ required: true, message: 'Please input your password!' }]}\n                  shouldUpdate={(prevValues, curValues) => {\n                    return prevValues?.price !== curValues?.price;\n                  }}>\n                  <Input placeholder=\"Ürün Fiyatı (₺)\" />\n                </Form.Item>\n              </div>\n            </div>\n            <Form.Item name=\"desc\" rules={[{ required: true, message: 'Please input your password!' }]}\n              shouldUpdate={(prevValues, curValues) => {\n                return prevValues?.desc !== curValues?.desc;\n              }}>\n              <Input.TextArea placeholder=\"Ürün Açıklaması\" />\n            </Form.Item>\n            <Form.Item name=\"link\" rules={[{ required: true, message: 'Please input your password!' }]}\n              shouldUpdate={(prevValues, curValues) => {\n                return prevValues?.link !== curValues?.link;\n              }}>\n              <Input placeholder=\"Ürün İnstagram Linki\" />\n            </Form.Item>\n\n            <div className=\"add-product__prop-filters mt-4 pt-2\">\n              <div className=\"row\">\n                {optionsList != \"\" && optionsList.filter.map((option, index) => (\n                  <>\n                    {option.main_title == \"price\" ? \"\" :\n                      <div className=\"col-md-4\" key={index}>\n                        <h6>{option.main_title_text}</h6>\n\n                        {option.main_title == \"gender\" ?\n                          <Radio.Group onChange={(e) => setSelectedRadio(e.target.value)} defaultValue={selectedProductInfo.gender}>\n                            <Space direction=\"vertical\">\n                              {option.filter_sub.map((option_sub, index) => (\n                                <Radio value={option_sub.title} key={index}>{option_sub.title}</Radio>\n                              ))}\n                            </Space>\n                          </Radio.Group>\n                          :\n                          <Checkbox.Group defaultValue={selectedCheckboxes} onChange={(checkedValues) => onChangeCheckbox(checkedValues, option.main_title)}>\n                            <Space direction=\"vertical\">\n                              {option.filter_sub.map((option_sub, index) => (\n                                <Checkbox\n                                  value={option_sub.title}\n                                  key={index}>{option_sub.title}\n                                </Checkbox>\n                              ))}\n                            </Space>\n                          </Checkbox.Group>\n                        }\n                      </div>\n                    }\n                  </>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n        <Button type=\"primary\" htmlType=\"submit\">Gönder</Button>\n      </Form>\n    </div>\n\n  );\n};\n\nexport default FormUpdate;\n","/Users/sahinzaybak/Desktop/butik-marketi-panel/src/components/product-operations/product-add/modals/collapse/panel-category.jsx",["154","155","156","157"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Radio, Space, } from \"antd\";\n\n//actions\nimport { fetchSubCategory, fetchCategoryTitleList, fetchFilterOptions } from \"../../../../../store/actions/add-product\";\n\nconst PanelCategory = ({ mainCategoryList, subCategoryList, categoryTitleList }) => {\n  const dispatch = useDispatch();\n  const [mainCategoryValue, setMainCategoryValue] = useState(false);\n  const [subCategoryValue, setSubCategoryValue] = useState(false);\n  const [categoryValue, setCategoryValue] = useState(false);\n\n  function selectedMainCategory(e) { // Ana Kategori Seçimi (Kadın, Erkek, Çocuk&Bebek, Ev&Yaşam ..vs)\n    const mainCatValue = e.target.value\n    setMainCategoryValue(mainCatValue)\n    dispatch(fetchSubCategory(mainCatValue)); //Alt kategorileri getir.\n  };\n\n  function selectedSubCategory(e) { // Alt Kategori Seçimi (Giyim, Ayakkabı, Çanta&Aksesuar ..vs)\n    const subCatValue = e.target.value\n    setSubCategoryValue(subCatValue)\n    dispatch(fetchCategoryTitleList(mainCategoryValue, subCatValue)); //kategorileri getir.\n  };\n\n  function selectedCategory(e) { // Kategori Seçimi (T-shirt, Pantolon, Etek ..vs)\n    const catValue = e.target.defaultValue;\n    setCategoryValue(catValue)\n    dispatch({ type: \"SELECTED_CATEGORY_INFO\", payload: { slug: e.target.slug, filterTitle: catValue } }); //erkek-gomlek-x-12s\n    dispatch(fetchFilterOptions(catValue)); //kategorileri getir.\n    dispatch({ type: \"OPEN_ADD_PRODUCT_FORM_TAB\", payload: true }) //Kategori seçince Form tabı açılsın\n  };\n\n  return (\n    <div className=\"add-product__category\">\n      <div className=\"row\">\n        <div className=\"col-md-4\">\n          <div className=\"add-product__modal-item\">\n            <h6>Ana Kategori Seçin</h6>\n            <Radio.Group onChange={selectedMainCategory} value={mainCategoryValue}>\n              <Space direction=\"vertical\">\n                {mainCategoryList != \"\" && mainCategoryList.categories.map((mainCategory, index) => (\n                  <>\n                    {mainCategory.slug.includes(\"ayakkabi-canta\") || mainCategory.slug.includes(\"saat-aksesuar\") ? \"\"\n                      :\n                      <Radio value={mainCategory.slug} defaultValue={mainCategory.title} key={index}>{mainCategory.title}</Radio>\n                    }\n                  </>\n                ))}\n                <p>(Diğer kategorilere otomatik atama yapılır.)</p>\n              </Space>\n            </Radio.Group>\n          </div>\n        </div>\n        <div className=\"col-md-4\">\n          <div className=\"add-product__modal-item\">\n            <h6>Alt Kategori Seçin</h6>\n            <Radio.Group onChange={selectedSubCategory} value={subCategoryValue}>\n              <Space direction=\"vertical\">\n                {subCategoryList != \"\" && subCategoryList.categories.map((subCategory, index) => (\n                  <Radio value={subCategory.slug} key={index}>{subCategory.title}</Radio>\n                ))}\n              </Space>\n            </Radio.Group>\n          </div>\n        </div>\n        <div className=\"col-md-4\">\n          <div className=\"add-product__modal-item last\">\n            <h6>Kategori Seçin</h6>\n            <Radio.Group onChange={selectedCategory} defaultValue={categoryValue}>\n              <Space direction=\"vertical\">\n                {categoryTitleList != \"\" && categoryTitleList.categories.map((category, index) => (\n                  <Radio value={category.title} defaultValue={category.filter_title} slug={category.slug} key={index}>{category.title}</Radio>\n                ))}\n              </Space>\n            </Radio.Group>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PanelCategory;\n","/Users/sahinzaybak/Desktop/butik-marketi-panel/src/components/product-operations/product-add/modals/collapse/panel-form.jsx",["158","159","160","161","162","163","164","165","166","167","168"],"import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Modal, Radio, Checkbox, Space, Input, Button, Form, Spin } from \"antd\";\nimport { PlusOutlined, ExclamationCircleOutlined, LoadingOutlined } from '@ant-design/icons';\nimport ImageUploading from \"react-images-uploading\";\nimport axios from \"axios\";\nimport { store } from 'react-notifications-component';\nimport { IsAddedProduct } from '../../../../../helpers/helpers'\n\n//Actions\nimport { fetchAddProduct } from \"../../../../../store/actions/add-product\";\n\nconst PanelForm = ({ optionsList }) => {\n  const dispatch = useDispatch();\n  const { confirm } = Modal;\n  const [mainCategoryValue, setMainCategoryValue] = useState(false);\n  const [images, setImages] = useState([]);\n  const [selectedRadio, setSelectedRadio] = useState();\n  const [selectedCheckSizes, setSelectedCheckSizes] = useState([]);\n  const [selectedCheckColors, setSelectedCheckColors] = useState([]);\n  const [imageSlider, setImageSlider] = useState([]);\n  const [coverImage, setCoverImage] = useState(0);\n  const [isAllUploadImage, setIsAllUploadImage] = useState(true);\n\n  let selectedCategorySlug = useSelector((state) => state.addProduct.selectedCategorySlug); //Filter Listesi (Cinsiyet, Beden, Renk ..vs)\n  let selectedCategoryFilterTitle = useSelector((state) => state.addProduct.selectedCategoryFilterTitle); //Filter Listesi (Cinsiyet, Beden, Renk ..vs)\n  let imageSliderArray = []\n\n  //Resim yükleme\n  function onChangeImageUpload(imageList) {\n    setIsAllUploadImage(false)\n    setImages(imageList);\n    const fmData = new FormData();\n    const config = { headers: { \"content-type\": \"multipart/form-data\" } };\n    imageList.forEach((item) => { //Seçilen resimleri aktar\n      fmData.append(\"image\", item.file);\n      try {\n        axios.post(\"https://api.imgbb.com/1/upload?key=8b372dc4d088f787a0516386606606eb\", fmData, config).then(value => {\n          if (value != null) {\n            imageSliderArray.push({ image_slider: value.data.data.display_url })\n            setImageSlider(imageSliderArray)\n            if (imageSliderArray.length == imageList.length) { //resimlerin hepsi yüklendikten sonra..\n              setIsAllUploadImage(true)\n            }\n          }\n        })\n      } catch (err) { console.log(err) }\n    });\n  };\n\n  //Kapak fotoğrafı seç\n  function selectCoverImage(index) {\n    setCoverImage(imageSlider[index])\n  };\n\n  //Beden ve Renk seçimi => seçili checkboxlar\n  function onChangeCheck(e, title) {\n    if (title == \"size\") {\n      if (e.target.checked) {\n        setSelectedCheckSizes([\n          ...selectedCheckSizes,\n          { size_title: e.target.value }\n        ]);\n      } else {\n        setSelectedCheckSizes(\n          selectedCheckSizes.filter((size) => size.size_title !== e.target.value) //sil\n        );\n      }\n    }\n    if (title == \"color\") {\n      if (e.target.checked) {\n        setSelectedCheckColors([\n          ...selectedCheckColors,\n          { color_title: e.target.value },\n        ]);\n      } else {\n        setSelectedCheckColors(\n          selectedCheckColors.filter((size) => size.color_title !== e.target.value) //sil\n        );\n      }\n    }\n  }\n\n  //Formu gönder\n  function onFinishForm(values) {\n    confirm({\n      title: 'Ürününüz yayınlanıyor..',\n      icon: <ExclamationCircleOutlined />,\n      centered: true,\n      content: 'Ürün bilgileriniz doğru ise, ürününüzü yayınlamak istiyor musunuz?',\n      okText: 'Evet',\n      cancelText: 'Hayır',\n      onOk() {\n        return new Promise((resolve, reject) => {\n          setTimeout(Math.random() > 1000 ? resolve : reject, 1000);\n          setTimeout(async () => {\n            await dispatch(fetchAddProduct({\n              title: values.productName,\n              desc: values.desc,\n              price: values.price,\n              link: values.link,\n              image: coverImage != \"\" ? coverImage.image_slider : imageSlider[0].image_slider,\n              category: selectedCategorySlug,\n              filterTitle: selectedCategoryFilterTitle,\n              gender: selectedRadio,\n              size: selectedCheckSizes,\n              images: imageSlider,\n              comments: [],\n              colors: selectedCheckColors\n            }))\n            if (IsAddedProduct) { //yeni ürün eklendiğinde (helpers)\n              store.addNotification({\n                message: \"Tebrikler, ürününüz başarıya yayınladı :)\",\n                type: \"success\",\n                insert: \"top\",\n                width: 300,\n                showIcon: true,\n                container: \"top-right\",\n                animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                dismiss: {\n                  duration: 2000,\n                  onScreen: false\n                },\n              })\n            }\n          }, 1000);\n        }).catch(() => false);\n      },\n      onCancel() {\n        console.log('Cancel');\n      },\n    });\n  };\n\n  return (\n    <div className=\"add-product__prop\">\n      <Form onFinish={onFinishForm} autoComplete=\"off\">\n        <div className=\"row\">\n          <div className=\"col-md-4 p-0\">\n            <ImageUploading multiple value={images} onChange={onChangeImageUpload} vdataURLKey=\"data_url\">\n              {\n                ({ imageList, onImageUpload }) => (\n                  <>\n                    <div className=\"add-product__prop-wrp\">\n                      <div className=\"add-product__image\" onClick={onImageUpload}>\n                        <div className=\"d-flex align-items-center justify-content-center h-100\">\n                          <PlusOutlined />\n                          <h6 className=\"ml-2\">Ürün Resimleri Ekle</h6>\n                        </div>\n                      </div>\n                      <div className=\"upload__image-wrapper h-100\">\n                        <div className=\"row no-gutters\">\n                          <div className=\"cover mb-2 mt-2\">\n                            {imageList != \"\" && coverImage == \"\" && <img src={imageList[0].dataURL} alt=\"\" />}\n                            {coverImage != \"\" && <img src={coverImage.image_slider} alt=\"\" />}\n\n                          </div>\n                          {!isAllUploadImage &&\n                            <div className=\"add-product__loading\">\n                              <Spin indicator={<LoadingOutlined className=\"spin\" style={{ fontSize: 40 }} spin />} />\n                            </div>\n                          }\n                          {imageList && imageList.map((image, index) => (\n                            <div className=\"col-md-3\">\n                              <div key={index} className=\"image-item\" onClick={() => selectCoverImage(index)}>\n                                <img src={image.dataURL} alt=\"\" width=\"100\" />\n                              </div>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n                  </>\n                )\n              }\n            </ImageUploading>\n          </div>\n\n          <div className=\"col-md-8 pl-5\">\n            <div className=\"row\">\n              <div className=\"col-md-8\">\n                <Form.Item name=\"productName\" rules={[{ required: true, message: 'Please input your username!' }]}>\n                  <Input placeholder=\"Ürün İsmi\" />\n                </Form.Item>\n              </div>\n              <div className=\"col-md-4\">\n                <Form.Item name=\"price\" rules={[{ required: true, message: 'Please input your password!' }]}>\n                  <Input placeholder=\"Ürün Fiyatı (₺)\" />\n                </Form.Item>\n              </div>\n            </div>\n            <Form.Item name=\"desc\" rules={[{ required: true, message: 'Please input your password!' }]}>\n              <Input.TextArea placeholder=\"Ürün Açıklaması\" />\n            </Form.Item>\n            <Form.Item name=\"link\" rules={[{ required: true, message: 'Please input your password!' }]}>\n              <Input placeholder=\"Ürün İnstagram Linki\" />\n            </Form.Item>\n\n            <div className=\"add-product__prop-filters mt-4 pt-2\">\n              <div className=\"row\">\n                {optionsList != \"\" && optionsList.filter.map((option, index) => (\n                  <>\n                    {option.main_title == \"price\" ? \"\" :\n                      <div className=\"col-md-4\" key={index}>\n                        <h6>{option.main_title_text}</h6>\n                        {option.main_title == \"gender\" ?\n                          <Radio.Group onChange={(e) => setSelectedRadio(e.target.value)} defaultValue={mainCategoryValue}>\n                            <Space direction=\"vertical\">\n                              {option.filter_sub.map((option_sub, index) => (\n                                <Radio value={option_sub.title} key={index}>{option_sub.title}</Radio>\n                              ))}\n                            </Space>\n                          </Radio.Group>\n                          :\n                          <Checkbox.Group defaultValue={mainCategoryValue}>\n                            <Space direction=\"vertical\">\n                              {option.filter_sub.map((option_sub, index) => (\n                                <Checkbox onChange={(e) => onChangeCheck(e, option.main_title)} value={option_sub.title} key={index}>{option_sub.title}</Checkbox>\n                              ))}\n                            </Space>\n                          </Checkbox.Group>\n                        }\n                      </div>\n                    }\n                  </>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n        <Button type=\"primary\" htmlType=\"submit\">Gönder</Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default PanelForm;\n","/Users/sahinzaybak/Desktop/butik-marketi-panel/src/components/content-loader/product-list-loader.jsx",[],"/Users/sahinzaybak/Desktop/butik-marketi-panel/src/components/product-operations/product-analysis/modal-analysis.jsx",["169","170","171"],"import { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Modal } from \"antd\";\n\n//Components\nimport Analysis from './analysis'\n\nconst ModalAnalysis = ({ preview, onCancel, selectedProductCoverImage, selectedProductTitle }) => {\n  return (\n    <Modal\n      visible={preview}\n      footer={null}\n      destroyOnClose={true}\n      width={780}\n      centered\n      onCancel={() => { onCancel() }}>\n      <div className=\"add-product__modal\">\n        <h4 className=\"add-product__modal-title\">Ürün Analiz Bilgileri</h4>\n        <Analysis selectedProductCoverImage={selectedProductCoverImage} selectedProductTitle={selectedProductTitle}/>\n      </div>\n    </Modal>\n  );\n};\n\nexport default ModalAnalysis;\n","/Users/sahinzaybak/Desktop/butik-marketi-panel/src/components/product-operations/product-analysis/analysis.jsx",[],"/Users/sahinzaybak/Desktop/butik-marketi-panel/src/components/product-operations/product-update/modal-update.jsx",["172"],"import { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Modal } from \"antd\";\n\n//Actions\nimport { fetchFilterOptions } from \"../../../store/actions/add-product\";\n\n//Components\nimport PanelFormUpdate from './form-update'\n\nconst ModalUpdate = ({ preview, onCancel, selectedProductInfo }) => {\n  const dispatch = useDispatch();\n  let optionsList = useSelector((state) => state.addProduct.optionsList); //Filter Listesi (Cinsiyet, Beden, Renk ..vs)\n\n  //Modal açıldığında ürüne ait filtreleri getir. (giyim => X,S,M,L ..vs)\n  useEffect(() => {\n    if (preview)\n      dispatch(fetchFilterOptions(selectedProductInfo.filter_title)); \n  }, [selectedProductInfo]);\n\n  return (\n    <Modal\n      visible={preview}\n      footer={null}\n      destroyOnClose={true}\n      width={780}\n      centered\n      onCancel={() => { onCancel() }}>\n      <div className=\"add-product__modal\">\n        <h4 className=\"add-product__modal-title\">Ürün Bilgileri Düzenle</h4>\n        <PanelFormUpdate\n          optionsList={optionsList}\n          selectedProductInfo={selectedProductInfo} />\n      </div>\n    </Modal>\n  );\n};\n\nexport default ModalUpdate;\n","/Users/sahinzaybak/Desktop/butik-marketi-panel/src/pages/analysis.jsx",[],"/Users/sahinzaybak/Desktop/butik-marketi-panel/src/components/analysis.jsx",[],{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":1,"column":17,"nodeType":"179","messageId":"180","endLine":1,"endColumn":25},{"ruleId":"177","severity":1,"message":"181","line":1,"column":38,"nodeType":"179","messageId":"180","endLine":1,"endColumn":44},{"ruleId":"177","severity":1,"message":"182","line":4,"column":8,"nodeType":"179","messageId":"180","endLine":4,"endColumn":18},{"ruleId":"183","severity":1,"message":"184","line":18,"column":6,"nodeType":"185","endLine":18,"endColumn":8,"suggestions":"186"},{"ruleId":"177","severity":1,"message":"187","line":2,"column":10,"nodeType":"179","messageId":"180","endLine":2,"endColumn":20},{"ruleId":"177","severity":1,"message":"188","line":11,"column":5,"nodeType":"179","messageId":"180","endLine":11,"endColumn":18},{"ruleId":"189","severity":1,"message":"190","line":24,"column":16,"nodeType":"191","messageId":"192","endLine":24,"endColumn":18},{"ruleId":"189","severity":1,"message":"193","line":24,"column":54,"nodeType":"191","messageId":"192","endLine":24,"endColumn":56},{"ruleId":"183","severity":1,"message":"194","line":47,"column":6,"nodeType":"185","endLine":47,"endColumn":16,"suggestions":"195"},{"ruleId":"196","severity":1,"message":"197","line":5,"column":1,"nodeType":"198","endLine":16,"endColumn":2},{"ruleId":"189","severity":1,"message":"193","line":13,"column":34,"nodeType":"191","messageId":"192","endLine":13,"endColumn":36},{"ruleId":"189","severity":1,"message":"193","line":85,"column":26,"nodeType":"191","messageId":"192","endLine":85,"endColumn":28},{"ruleId":"189","severity":1,"message":"193","line":120,"column":26,"nodeType":"191","messageId":"192","endLine":120,"endColumn":28},{"ruleId":"196","severity":1,"message":"197","line":12,"column":1,"nodeType":"198","endLine":54,"endColumn":3},{"ruleId":"189","severity":1,"message":"193","line":6,"column":31,"nodeType":"191","messageId":"192","endLine":6,"endColumn":33},{"ruleId":"196","severity":1,"message":"197","line":6,"column":1,"nodeType":"198","endLine":22,"endColumn":3},{"ruleId":"183","severity":1,"message":"184","line":15,"column":6,"nodeType":"185","endLine":15,"endColumn":8,"suggestions":"199"},{"ruleId":"189","severity":1,"message":"193","line":26,"column":26,"nodeType":"191","messageId":"192","endLine":26,"endColumn":28},{"ruleId":"183","severity":1,"message":"184","line":26,"column":6,"nodeType":"185","endLine":26,"endColumn":8,"suggestions":"200"},{"ruleId":"183","severity":1,"message":"201","line":36,"column":6,"nodeType":"185","endLine":36,"endColumn":27,"suggestions":"202"},{"ruleId":"189","severity":1,"message":"193","line":51,"column":41,"nodeType":"191","messageId":"192","endLine":51,"endColumn":43},{"ruleId":"189","severity":1,"message":"193","line":62,"column":20,"nodeType":"191","messageId":"192","endLine":62,"endColumn":22},{"ruleId":"189","severity":1,"message":"193","line":68,"column":15,"nodeType":"191","messageId":"192","endLine":68,"endColumn":17},{"ruleId":"189","severity":1,"message":"193","line":74,"column":15,"nodeType":"191","messageId":"192","endLine":74,"endColumn":17},{"ruleId":"203","severity":1,"message":"204","line":75,"column":36,"nodeType":"205","messageId":"192","endLine":75,"endColumn":38},{"ruleId":"189","severity":1,"message":"190","line":104,"column":33,"nodeType":"191","messageId":"192","endLine":104,"endColumn":35},{"ruleId":"189","severity":1,"message":"190","line":107,"column":37,"nodeType":"191","messageId":"192","endLine":107,"endColumn":39},{"ruleId":"189","severity":1,"message":"190","line":156,"column":41,"nodeType":"191","messageId":"192","endLine":156,"endColumn":43},{"ruleId":"189","severity":1,"message":"190","line":225,"column":30,"nodeType":"191","messageId":"192","endLine":225,"endColumn":32},{"ruleId":"189","severity":1,"message":"193","line":227,"column":40,"nodeType":"191","messageId":"192","endLine":227,"endColumn":42},{"ruleId":"189","severity":1,"message":"193","line":231,"column":44,"nodeType":"191","messageId":"192","endLine":231,"endColumn":46},{"ruleId":"177","severity":1,"message":"206","line":1,"column":27,"nodeType":"179","messageId":"180","endLine":1,"endColumn":36},{"ruleId":"189","severity":1,"message":"190","line":42,"column":35,"nodeType":"191","messageId":"192","endLine":42,"endColumn":37},{"ruleId":"189","severity":1,"message":"190","line":60,"column":34,"nodeType":"191","messageId":"192","endLine":60,"endColumn":36},{"ruleId":"189","severity":1,"message":"190","line":72,"column":36,"nodeType":"191","messageId":"192","endLine":72,"endColumn":38},{"ruleId":"177","severity":1,"message":"207","line":16,"column":29,"nodeType":"179","messageId":"180","endLine":16,"endColumn":49},{"ruleId":"189","severity":1,"message":"193","line":42,"column":41,"nodeType":"191","messageId":"192","endLine":42,"endColumn":43},{"ruleId":"189","severity":1,"message":"193","line":58,"column":15,"nodeType":"191","messageId":"192","endLine":58,"endColumn":17},{"ruleId":"189","severity":1,"message":"193","line":70,"column":15,"nodeType":"191","messageId":"192","endLine":70,"endColumn":17},{"ruleId":"189","severity":1,"message":"190","line":102,"column":33,"nodeType":"191","messageId":"192","endLine":102,"endColumn":35},{"ruleId":"189","severity":1,"message":"190","line":155,"column":40,"nodeType":"191","messageId":"192","endLine":155,"endColumn":42},{"ruleId":"189","severity":1,"message":"193","line":155,"column":60,"nodeType":"191","messageId":"192","endLine":155,"endColumn":62},{"ruleId":"189","severity":1,"message":"190","line":156,"column":41,"nodeType":"191","messageId":"192","endLine":156,"endColumn":43},{"ruleId":"189","severity":1,"message":"190","line":202,"column":30,"nodeType":"191","messageId":"192","endLine":202,"endColumn":32},{"ruleId":"189","severity":1,"message":"193","line":204,"column":40,"nodeType":"191","messageId":"192","endLine":204,"endColumn":42},{"ruleId":"189","severity":1,"message":"193","line":207,"column":44,"nodeType":"191","messageId":"192","endLine":207,"endColumn":46},{"ruleId":"177","severity":1,"message":"206","line":1,"column":10,"nodeType":"179","messageId":"180","endLine":1,"endColumn":19},{"ruleId":"177","severity":1,"message":"208","line":2,"column":10,"nodeType":"179","messageId":"180","endLine":2,"endColumn":21},{"ruleId":"177","severity":1,"message":"209","line":2,"column":23,"nodeType":"179","messageId":"180","endLine":2,"endColumn":34},{"ruleId":"183","severity":1,"message":"210","line":19,"column":6,"nodeType":"185","endLine":19,"endColumn":27,"suggestions":"211"},"no-native-reassign",["212"],"no-negated-in-lhs",["213"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'addProduct' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["214"],"'useHistory' is defined but never used.","'loginUserInfo' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","React Hook useEffect has missing dependencies: 'history' and 'isLogin'. Either include them or remove the dependency array.",["215"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["216"],["217"],"React Hook useEffect has a missing dependency: 'form'. Either include it or remove the dependency array.",["218"],"no-empty-pattern","Unexpected empty array pattern.","ArrayPattern","'useEffect' is defined but never used.","'setMainCategoryValue' is assigned a value but never used.","'useSelector' is defined but never used.","'useDispatch' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'preview'. Either include them or remove the dependency array.",["219"],"no-global-assign","no-unsafe-negation",{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},{"desc":"220","fix":"224"},{"desc":"220","fix":"225"},{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},"Update the dependencies array to be: [dispatch]",{"range":"230","text":"231"},"Update the dependencies array to be: [authInfo, history, isLogin]",{"range":"232","text":"233"},{"range":"234","text":"231"},{"range":"235","text":"231"},"Update the dependencies array to be: [form, selectedProductInfo]",{"range":"236","text":"237"},"Update the dependencies array to be: [dispatch, preview, selectedProductInfo]",{"range":"238","text":"239"},[820,822],"[dispatch]",[1659,1669],"[authInfo, history, isLogin]",[574,576],[1454,1456],[1395,1416],"[form, selectedProductInfo]",[676,697],"[dispatch, preview, selectedProductInfo]"]